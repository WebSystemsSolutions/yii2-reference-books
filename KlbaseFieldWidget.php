<?php
/**
 * Created by PhpStorm.
 * User: lex
 * Date: 25.11.16
 * Time: 12:38
 */

namespace common\components\klbase;

use yii\base\Widget;
use yii\bootstrap\BaseHtml;
use yii\helpers\Html;

class KlbaseFieldWidget extends Widget
{
    // Глобальный Компонент справочников
    public $cmp;

    // Системное имя текущего справочника
    public $base;

    /**
     * Имя поля родителя зависимого справочника
     *
     * Текущая модель = 'field'
     * Другая модель
     * [
     *      $model,
     *      'name',
     * ]
     *
     * @var string | array
     */
    public $parrent = null;

    public $isEmptyOption = true;

    public $isDisableEmptyField = true;

    public $select2 = false;

    public $select2Reload = false;

    public $model;

    public $where = null;

    public $attribute;

    public $view;

    public $emptyTitle = ' ...';

    public $options = [
        'class' => 'form-control'
    ];

    private $klbase;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        // Получаем обект текущего справочника
        $baseName = $this->base;
        $this->klbase = $this->cmp->$baseName;
        $this->options['id'] = BaseHtml::getInputId($this->model, $this->attribute);

        if ($this->select2) $this->select2Init();

    }

    public function run()
    {

        $attrValue = BaseHtml::getAttributeValue($this->model, $this->attribute);
        $fieldName = BaseHtml::getInputName($this->model, $this->attribute);

        if (is_object($attrValue)) $attrValue = $attrValue->id;

        if ($this->isEmptyOption) {
            $this->options['prompt'] = $this->emptyTitle;
        }

        // Зависимости нет
        if ($this->parrent == null) {

            $list = $this->klbase->getTitle(null, null, $this->where);

            return Html::dropDownList($fieldName, $attrValue, $list, $this->options);


            // Зависимость Есть
        } else {
            // Зависимое значение родителя
            if (is_array($this->parrent)) {         // Другая модель
                $parrentValue = BaseHtml::getAttributeValue($this->parrent[0], $this->parrent[1]);
                // Зависимый Элемент формы
                $parrentId = BaseHtml::getInputId($this->parrent[0], $this->parrent[1]);
            } else {                                  // Текущая модель
                $parrentValue = BaseHtml::getAttributeValue($this->model, $this->parrent);
                // Зависимый Элемент формы
                $parrentId = BaseHtml::getInputId($this->model, $this->parrent);
            }
            if (is_object($parrentValue)) $parrentValue = $parrentValue->id;

            if (empty($parrentValue) && $this->isEmptyOption) {
                $this->options['prompt'] = $this->emptyTitle;
                $list = [];
                if ($this->isDisableEmptyField) $this->options['readonly'] = 'readonly';
            } else {
                $list = $this->klbase->getTitle(null, $parrentValue, $this->where);
            }

            $this->initJs($parrentId, '#' . $this->options['id'] . '-preload');

            return Html::dropDownList($fieldName, $attrValue, $list, $this->options) . $this->getPreloader($this->options['id'] . '-preload');
        }


    }


    public function initJs($parrentId, $selectIdPreload)
    {
        $apiUrl = $this->cmp->apiUrl['title'];
        $baseName = $this->base;
        $selectId = '#' . $this->options['id'];

        // Select 2 init
        if ($this->select2) $jsExt = '$("' . $selectId . '").select2("destroy"); $("' . $selectId . '").select2({language: "ru"});';
        else $jsExt = '';

        // Empty value Add
        if ($this->isEmptyOption) $jsEmpty = '$("' . $selectId . '").append($("<option></option>").attr("value", 0).text("' . $this->emptyTitle . '"));  $("' . $selectId . '").attr("readonly", "readonly");';
        else $jsEmpty = '';


        $js = <<<JSEOD
        $('#$parrentId').on('change', function(e){
            $('$selectId').empty(); // remove old options
            $('$selectIdPreload').show(); // show Preloader
            
            var value = $(this).val();
            $.ajax({
            type: 'get',
            url: '$apiUrl?bn=$baseName&id=' + value,
            success: function(data){
                $('$selectIdPreload').hide();
                $jsEmpty
                $.each(data, function(key,value) {
                    $('$selectId').append($('<option></option>').attr('value', key).text(value));
                    $('$selectId').removeAttr('readonly');
                });
                $jsExt
                $('$selectId').trigger('change');
            }
        });
        } );
JSEOD;

        $view = $this->getView();
        $view->registerJs($js);
    }


    /**
     * @param $selectIdPreload
     * @return string
     */
    private function getPreloader($selectIdPreload)
    {
        $SVG = '<div id="' . $selectIdPreload . '" style="position:relative; top:-20px; left:10px; display:none;" class="klbase-widget-preload"><svg width="100" height="15" viewBox="0 0 120 30" xmlns="http://www.w3.org/2000/svg" fill="#515151">
                    <circle cx="15" cy="15" r="15">
                        <animate attributeName="r" from="15" to="15" begin="0s" dur="0.8s" values="15;9;15" calcMode="linear" repeatCount="indefinite" />
                        <animate attributeName="fill-opacity" from="1" to="1" begin="0s" dur="0.8s" values="1;.5;1" calcMode="linear" repeatCount="indefinite" />
                    </circle>
                    <circle cx="60" cy="15" r="9" fill-opacity="0.3">
                        <animate attributeName="r" from="9" to="9" begin="0s" dur="0.8s" values="9;15;9" calcMode="linear" repeatCount="indefinite" />
                        <animate attributeName="fill-opacity" from="0.5" to="0.5" begin="0s" dur="0.8s" values=".5;1;.5" calcMode="linear" repeatCount="indefinite" />
                    </circle>
                    <circle cx="105" cy="15" r="15">
                        <animate attributeName="r" from="15" to="15" begin="0s" dur="0.8s" values="15;9;15" calcMode="linear" repeatCount="indefinite" />
                        <animate attributeName="fill-opacity" from="1" to="1" begin="0s" dur="0.8s" values="1;.5;1" calcMode="linear" repeatCount="indefinite" />
                    </circle>
        </svg></div>';

        return $SVG;
    }


    /**
     *
     */
    private function select2Init()
    {
        $view = $this->getView();
        $view->registerAssetBundle(KlbaseFieldWidgetAsset::className());

        $selectId = '#' . $this->options['id'];

        $js = <<<JSEOD
        $('$selectId').select2({language: "ru"});
JSEOD;

         if (is_array($this->select2Reload)) {
            $reload = $this->select2Reload;
            if (isset($reload['selector']) && isset($reload['event'])) {
                $js .= '$("' . $reload['selector'] . '").on("' . $reload['event'] . '", function(e){ $("' . $selectId . '").select2("destroy").select2(); });';
            }
        }

        $view->registerJs($js);

    }


}